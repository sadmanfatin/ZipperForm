package model.entity;

import oracle.jbo.AttributeList;
import oracle.jbo.Key;
import oracle.jbo.RowIterator;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.TransactionEvent;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Tue Aug 30 10:46:07 BDT 2016
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class ZipperLineEOImpl extends EntityImpl {
    private static EntityDefImpl mDefinitionObject;

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        Lineid {
            public Object get(ZipperLineEOImpl obj) {
                return obj.getLineid();
            }

            public void put(ZipperLineEOImpl obj, Object value) {
                obj.setLineid((Number)value);
            }
        }
        ,
        Headedid {
            public Object get(ZipperLineEOImpl obj) {
                return obj.getHeadedid();
            }

            public void put(ZipperLineEOImpl obj, Object value) {
                obj.setHeadedid((Number)value);
            }
        }
        ,
        Applicationarea {
            public Object get(ZipperLineEOImpl obj) {
                return obj.getApplicationarea();
            }

            public void put(ZipperLineEOImpl obj, Object value) {
                obj.setApplicationarea((String)value);
            }
        }
        ,
        Uom {
            public Object get(ZipperLineEOImpl obj) {
                return obj.getUom();
            }

            public void put(ZipperLineEOImpl obj, Object value) {
                obj.setUom((String)value);
            }
        }
        ,
        ZipperDetailsEO {
            public Object get(ZipperLineEOImpl obj) {
                return obj.getZipperDetailsEO();
            }

            public void put(ZipperLineEOImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        ZipperHeaderEO {
            public Object get(ZipperLineEOImpl obj) {
                return obj.getZipperHeaderEO();
            }

            public void put(ZipperLineEOImpl obj, Object value) {
                obj.setZipperHeaderEO((ZipperHeaderEOImpl)value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(ZipperLineEOImpl object);

        public abstract void put(ZipperLineEOImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }
    public static final int LINEID = AttributesEnum.Lineid.index();
    public static final int HEADEDID = AttributesEnum.Headedid.index();
    public static final int APPLICATIONAREA = AttributesEnum.Applicationarea.index();
    public static final int UOM = AttributesEnum.Uom.index();
    public static final int ZIPPERDETAILSEO = AttributesEnum.ZipperDetailsEO.index();
    public static final int ZIPPERHEADEREO = AttributesEnum.ZipperHeaderEO.index();

    /**
     * This is the default constructor (do not remove).
     */
    public ZipperLineEOImpl() {
    }

    /**
     * Gets the attribute value for Lineid, using the alias name Lineid.
     * @return the Lineid
     */
    public Number getLineid() {
        return (Number)getAttributeInternal(LINEID);
    }

    /**
     * Sets <code>value</code> as the attribute value for Lineid.
     * @param value value to set the Lineid
     */
    public void setLineid(Number value) {
        setAttributeInternal(LINEID, value);
    }

    /**
     * Gets the attribute value for Headedid, using the alias name Headedid.
     * @return the Headedid
     */
    public Number getHeadedid() {
        return (Number)getAttributeInternal(HEADEDID);
    }

    /**
     * Sets <code>value</code> as the attribute value for Headedid.
     * @param value value to set the Headedid
     */
    public void setHeadedid(Number value) {
        setAttributeInternal(HEADEDID, value);
    }

    /**
     * Gets the attribute value for Applicationarea, using the alias name Applicationarea.
     * @return the Applicationarea
     */
    public String getApplicationarea() {
        return (String)getAttributeInternal(APPLICATIONAREA);
    }

    /**
     * Sets <code>value</code> as the attribute value for Applicationarea.
     * @param value value to set the Applicationarea
     */
    public void setApplicationarea(String value) {
        setAttributeInternal(APPLICATIONAREA, value);
    }

    /**
     * Gets the attribute value for Uom, using the alias name Uom.
     * @return the Uom
     */
    public String getUom() {
        return (String)getAttributeInternal(UOM);
    }

    /**
     * Sets <code>value</code> as the attribute value for Uom.
     * @param value value to set the Uom
     */
    public void setUom(String value) {
        setAttributeInternal(UOM, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index,
                                           AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value,
                                         AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }

    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getZipperDetailsEO() {
        return (RowIterator)getAttributeInternal(ZIPPERDETAILSEO);
    }

    /**
     * @return the associated entity ZipperHeaderEOImpl.
     */
    public ZipperHeaderEOImpl getZipperHeaderEO() {
        return (ZipperHeaderEOImpl)getAttributeInternal(ZIPPERHEADEREO);
    }

    /**
     * Sets <code>value</code> as the associated entity ZipperHeaderEOImpl.
     */
    public void setZipperHeaderEO(ZipperHeaderEOImpl value) {
        setAttributeInternal(ZIPPERHEADEREO, value);
    }

    /**
     * @param lineid key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(Number lineid) {
        return new Key(new Object[]{lineid});
    }

    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        if (mDefinitionObject == null) {
            mDefinitionObject = EntityDefImpl.findDefObject("model.entity.ZipperLineEO");
        }
        return mDefinitionObject;
    }

    /**
     * Add attribute defaulting logic in this method.
     * @param attributeList list of attribute names/values to initialize the row
     */
    protected void create(AttributeList attributeList) {
        super.create(attributeList);
        oracle.jbo.server.SequenceImpl s =new oracle.jbo.server.SequenceImpl("MJ_OM_ZIPPER_LINE_SEQ",getDBTransaction());
        oracle.jbo.domain.Number sVal = s.getSequenceNumber();
        setLineid(sVal);


    }

    /**
     * Add entity remove logic in this method.
     */
    public void remove() {
        super.remove();
    }

    /**
     * Add locking logic here.
     */
    public void lock() {
        super.lock();
    }

    /**
     * Custom DML update/insert/delete logic here.
     * @param operation the operation type
     * @param e the transaction event
     */
    protected void doDML(int operation, TransactionEvent e) {
        super.doDML(operation, e);
    }
}

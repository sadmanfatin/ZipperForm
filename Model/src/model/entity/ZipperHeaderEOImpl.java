package model.entity;

import oracle.jbo.AttributeList;
import oracle.jbo.Key;
import oracle.jbo.RowIterator;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.TransactionEvent;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Tue Aug 30 10:43:01 BDT 2016
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class ZipperHeaderEOImpl extends EntityImpl {
    private static EntityDefImpl mDefinitionObject;

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        Headeid {
            public Object get(ZipperHeaderEOImpl obj) {
                return obj.getHeadeid();
            }

            public void put(ZipperHeaderEOImpl obj, Object value) {
                obj.setHeadeid((Number)value);
            }
        }
        ,
        Buyerid {
            public Object get(ZipperHeaderEOImpl obj) {
                return obj.getBuyerid();
            }

            public void put(ZipperHeaderEOImpl obj, Object value) {
                obj.setBuyerid((Number)value);
            }
        }
        ,
        Season {
            public Object get(ZipperHeaderEOImpl obj) {
                return obj.getSeason();
            }

            public void put(ZipperHeaderEOImpl obj, Object value) {
                obj.setSeason((String)value);
            }
        }
        ,
        Stylename {
            public Object get(ZipperHeaderEOImpl obj) {
                return obj.getStylename();
            }

            public void put(ZipperHeaderEOImpl obj, Object value) {
                obj.setStylename((String)value);
            }
        }
        ,
        Styleno {
            public Object get(ZipperHeaderEOImpl obj) {
                return obj.getStyleno();
            }

            public void put(ZipperHeaderEOImpl obj, Object value) {
                obj.setStyleno((String)value);
            }
        }
        ,
        ZipperLineEO {
            public Object get(ZipperHeaderEOImpl obj) {
                return obj.getZipperLineEO();
            }

            public void put(ZipperHeaderEOImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(ZipperHeaderEOImpl object);

        public abstract void put(ZipperHeaderEOImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }
    public static final int HEADEID = AttributesEnum.Headeid.index();
    public static final int BUYERID = AttributesEnum.Buyerid.index();
    public static final int SEASON = AttributesEnum.Season.index();
    public static final int STYLENAME = AttributesEnum.Stylename.index();
    public static final int STYLENO = AttributesEnum.Styleno.index();
    public static final int ZIPPERLINEEO = AttributesEnum.ZipperLineEO.index();

    /**
     * This is the default constructor (do not remove).
     */
    public ZipperHeaderEOImpl() {
    }

    /**
     * Gets the attribute value for Headeid, using the alias name Headeid.
     * @return the Headeid
     */
    public Number getHeadeid() {
        return (Number)getAttributeInternal(HEADEID);
    }

    /**
     * Sets <code>value</code> as the attribute value for Headeid.
     * @param value value to set the Headeid
     */
    public void setHeadeid(Number value) {
        setAttributeInternal(HEADEID, value);
    }

    /**
     * Gets the attribute value for Buyerid, using the alias name Buyerid.
     * @return the Buyerid
     */
    public Number getBuyerid() {
        return (Number)getAttributeInternal(BUYERID);
    }

    /**
     * Sets <code>value</code> as the attribute value for Buyerid.
     * @param value value to set the Buyerid
     */
    public void setBuyerid(Number value) {
        setAttributeInternal(BUYERID, value);
    }

    /**
     * Gets the attribute value for Season, using the alias name Season.
     * @return the Season
     */
    public String getSeason() {
        return (String)getAttributeInternal(SEASON);
    }

    /**
     * Sets <code>value</code> as the attribute value for Season.
     * @param value value to set the Season
     */
    public void setSeason(String value) {
        setAttributeInternal(SEASON, value);
    }

    /**
     * Gets the attribute value for Stylename, using the alias name Stylename.
     * @return the Stylename
     */
    public String getStylename() {
        return (String)getAttributeInternal(STYLENAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for Stylename.
     * @param value value to set the Stylename
     */
    public void setStylename(String value) {
        setAttributeInternal(STYLENAME, value);
    }

    /**
     * Gets the attribute value for Styleno, using the alias name Styleno.
     * @return the Styleno
     */
    public String getStyleno() {
        return (String)getAttributeInternal(STYLENO);
    }

    /**
     * Sets <code>value</code> as the attribute value for Styleno.
     * @param value value to set the Styleno
     */
    public void setStyleno(String value) {
        setAttributeInternal(STYLENO, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index,
                                           AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value,
                                         AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }

    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getZipperLineEO() {
        return (RowIterator)getAttributeInternal(ZIPPERLINEEO);
    }

    /**
     * @param headeid key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(Number headeid) {
        return new Key(new Object[]{headeid});
    }

    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        if (mDefinitionObject == null) {
            mDefinitionObject = EntityDefImpl.findDefObject("model.entity.ZipperHeaderEO");
        }
        return mDefinitionObject;
    }

    /**
     * Add attribute defaulting logic in this method.
     * @param attributeList list of attribute names/values to initialize the row
     */
    protected void create(AttributeList attributeList) {
        super.create(attributeList);
        oracle.jbo.server.SequenceImpl s =new oracle.jbo.server.SequenceImpl("MJ_OM_ZIPPER_HEADER_SEQ",getDBTransaction());
        oracle.jbo.domain.Number sVal = s.getSequenceNumber();
        setHeadeid(sVal);

    }

    /**
     * Add entity remove logic in this method.
     */
    public void remove() {
        super.remove();
    }

    /**
     * Add locking logic here.
     */
    public void lock() {
        super.lock();
    }

    /**
     * Custom DML update/insert/delete logic here.
     * @param operation the operation type
     * @param e the transaction event
     */
    protected void doDML(int operation, TransactionEvent e) {
        super.doDML(operation, e);
    }
}
